version: '3.8'

services:
  web:
    build: .
    ports:
      - "5000:5000"
    volumes:
      - ./uploads:/app/uploads
      - ./keys:/app/keys
      - ./migrations:/app/migrations
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY}
      - VIRUSTOTAL_API_KEY=${VIRUSTOTAL_API_KEY}
      - DATABASE_URL=postgresql://user:password@db:5432/securev2
    depends_on:
      - db
    networks:
      - secure_network
    restart: unless-stopped
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    tmpfs:
      - /tmp
      - /var/run
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: >
      sh -c "flask db init &&
             flask db migrate &&
             flask db upgrade &&
             python create_admin.py &&
             gunicorn --bind 0.0.0.0:5000 app:app"

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=securev2
    networks:
      - secure_network
    restart: unless-stopped
    user: postgres
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
    driver: local

networks:
  secure_network:
    driver: bridge 
